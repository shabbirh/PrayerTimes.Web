@page
@model IndexModel

@{
    ViewData["Title"] = "Home";
}

<div class="align-content-lg-end">
    @Html.Raw(Model.PrayerTimes)
</div>

<div class="container">

    <form method="post" class="row g-3" novalidate>
        <div class="col-md-4">
            <label for="latitude" class="form-label">Latitude</label>
            <input class="form-control"
                   asp-for="PrayerTimeCalculatorModel.Latitude"
                   type="text"
                   id="latitude"
                   required />
        </div>
        <div class="col-md-4">
            <label for="longitude" class="form-label">Longitude</label>
            <input class="form-control"
                   asp-for="PrayerTimeCalculatorModel.Longitude"
                   type="text"
                   id="longitude"
                   required />
        </div>
        <div class="col-md-4">
            <label for="altitude" class="form-label">Altitude</label>
            <input class="form-control"
                   asp-for="PrayerTimeCalculatorModel.Altitude"
                   type="text"
                   id="altitude"
                   required />
        </div>
        <div class="col-md-4">
            <label for="calculation-date" class="form-label">Calculation Date</label>
            <input class="form-control"
                   asp-for="PrayerTimeCalculatorModel.CalculationDate"
                   type="date"
                   value="@DateTime.Now.ToString("yyyy-MM-dd")"
                   id="calculation-date"
                   required />
        </div>
        <div class="col-md-4">
            <label for="lunar-hijri-date-offset" class="form-label">Lunar Hijri Date Offset (<span id="offset-value">0</span>)</label>
            <input class="form-range"
                   type="range"
                   asp-for="PrayerTimeCalculatorModel.LunarHijriOffset"
                   min="-3"
                   max="3"
                   id="lunar-hijri-date-offset"
                   required
                   onChange="document.getElementById('offset-value').innerText = document.getElementById('lunar-hijri-date-offset').value" />
        </div>
        <div class="col-md-4">
            <label for="timezone-drop-down" class="form-label">Calculation Method</label>
            <select asp-for="PrayerTimeCalculatorModel.CalculationMethodPreset"
                    asp-items="IndexModel.GetCalculationModePresets()"
                    class="form-select">
                <option selected="selected" value="">Please select a calculation method</option>
            </select>
        </div>
        <div class="col-md-6">
            <label for="timezone-drop-down" class="form-label">Time Zone@* (Detected: <span id="detected-timezone"></span>)*@</label>
            <select asp-for="PrayerTimeCalculatorModel.TimeZone"
                    asp-items="IndexModel.GetCountriesList()"
                    class="form-select"
                    id="timezone-drop-down">
                <option selected="selected" value="">Please select your timezone</option>
            </select>
        </div>
        <div class="col-md-6">
            <label for="dst-dropdown" class="form-label">Daylight Savings Time</label>
            <select asp-for="PrayerTimeCalculatorModel.DayLightSavingsTime"
                    class="form-select"
                    id="dst-dropdown">
                <option selected="selected" value="false">Daylight Savings Time is OFF</option>
                <option value="true">Daylight Savings Time is ON</option>
            </select>
        </div>
        <div class="d-grid gap-2">
            <input class="btn btn-dark"
                   type="submit"
                   value="Calculate"
                   asp-page-handler="Submit" />
        </div>
        <hr />
    </form>
</div>

<div class="alert-danger">
    <p id="location-info">

    </p>
</div>

<script>
    window.onload = getLocation();
    //window.onload = addLocalTimezone();
    

    var x = document.getElementById("location-info");
    var latForm = document.getElementById("latitude");
    var longForm = document.getElementById("longitude");
    var altForm = document.getElementById("altitude");
    var timezoneSpan = document.getElementById("detected-timezone");
    //timezoneSpan.innerHTML = Intl.DateTimeFormat().resolvedOptions().timeZone;

    //function addLocalTimezone()
    //{
    //    //fetch("http://api.namaaz.net/api/timezoneConverter")
    //    //    .then( res => res.json())
    //    //    .then(response => {
    //    //        processUserData(response)
    //    //    })
    //    //    .catch(status => {
    //    //        ipLookup()
    //    //    })


    //    // Create an Option object       
    //    var opt = document.createElement("option");        

    //    // Assign text and value to Option object
    //    opt.text = Intl.DateTimeFormat().resolvedOptions().timeZone;
    //    opt.value = "Something";
    //    opt.selected = true;

    //    // Add an Option object to Drop Down List Box
    //    document.getElementById('timezone-drop-down').options.add(opt);
    //}

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition);
        } else {
            x.innerHTML = "Geolocation is not supported by this browser.";
        }
    }

    function showPosition(position) {

        latForm.value = position.coords.latitude;
        longForm.value = position.coords.longitude;
        if (position.coords.altitude === null) {
            altForm.value = 0.0;
        } else {
            altForm.value = position.coords.altitude;
        }
    }
</script>
